!function(){class e extends THREE.Loader{constructor(e){super(e)}load(e,t,n,s){const o=this,r=""===o.path?THREE.LoaderUtils.extractUrlBase(e):o.path,i=new THREE.FileLoader(o.manager);i.setPath(o.path),i.setRequestHeader(o.requestHeader),i.setWithCredentials(o.withCredentials),i.load(e,(function(n){try{t(o.parse(n,r))}catch(t){s?s(t):console.error(t),o.manager.itemError(e)}}),n,s)}parse(e,t){function n(e,t){const n=[],s=e.childNodes;for(let e=0,o=s.length;e<o;e++){const o=s[e];o.nodeName===t&&n.push(o)}return n}function s(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=t[e];return n}function o(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=parseFloat(t[e]);return n}function r(e){if(0===e.length)return[];const t=e.trim().split(/\s+/),n=new Array(t.length);for(let e=0,s=t.length;e<s;e++)n[e]=parseInt(t[e]);return n}function i(e){return e.substring(1)}function a(){return"three_default_"+wt++}function c(e){return 0===Object.keys(e).length}function l(e){return{unit:d(n(e,"unit")[0]),upAxis:u(n(e,"up_axis")[0])}}function d(e){return void 0!==e&&!0===e.hasAttribute("meter")?parseFloat(e.getAttribute("meter")):1}function u(e){return void 0!==e?e.textContent:"Y_UP"}function f(e,t,s,o){const r=n(e,t)[0];if(void 0!==r){const e=n(r,s);for(let t=0;t<e.length;t++)o(e[t])}}function h(e,t){for(const n in e){e[n].build=t(e[n])}}function m(e,t){return void 0!==e.build||(e.build=t(e)),e.build}function p(e){const t={sources:{},samplers:{},channels:{}};let n=!1;for(let s=0,o=e.childNodes.length;s<o;s++){const o=e.childNodes[s];if(1!==o.nodeType)continue;let r;switch(o.nodeName){case"source":r=o.getAttribute("id"),t.sources[r]=Ee(o);break;case"sampler":r=o.getAttribute("id"),t.samplers[r]=g(o);break;case"channel":r=o.getAttribute("target"),t.channels[r]=b(o);break;case"animation":p(o),n=!0;break;default:console.log(o)}}!1===n&&(At.animations[e.getAttribute("id")||THREE.MathUtils.generateUUID()]=t)}function g(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"input"===s.nodeName){const e=i(s.getAttribute("source")),n=s.getAttribute("semantic");t.inputs[n]=e}}return t}function b(e){const t={};let n=e.getAttribute("target").split("/");const s=n.shift();let o=n.shift();const r=-1!==o.indexOf("("),a=-1!==o.indexOf(".");if(a)n=o.split("."),o=n.shift(),t.member=n.shift();else if(r){const e=o.split("(");o=e.shift();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t].replace(/\)/,""));t.indices=e}return t.id=s,t.sid=o,t.arraySyntax=r,t.memberSyntax=a,t.sampler=i(e.getAttribute("source")),t}function y(e){const t=[],n=e.channels,s=e.samplers,o=e.sources;for(const e in n)if(n.hasOwnProperty(e)){const r=n[e],i=s[r.sampler],a=i.inputs.INPUT,c=i.inputs.OUTPUT;x(N(r,o[a],o[c]),t)}return t}function E(e){return m(At.animations[e],y)}function N(e,t,n){const s=At.nodes[e.id],o=tt(s.id),r=s.transforms[e.sid],i=s.matrix.clone().transpose();let a,c,l,d,u,f;const h={};switch(r){case"matrix":for(l=0,d=t.array.length;l<d;l++)if(a=t.array[l],c=l*n.stride,void 0===h[a]&&(h[a]={}),!0===e.arraySyntax){const t=n.array[c],s=e.indices[0]+4*e.indices[1];h[a][s]=t}else for(u=0,f=n.stride;u<f;u++)h[a][u]=n.array[c+u];break;case"translate":case"rotate":case"scale":console.warn('THREE.ColladaLoader: Animation transform type "%s" not yet implemented.',r)}const m=T(h,i);return{name:o.uuid,keyframes:m}}function T(e,t){function n(e,t){return e.time-t.time}const s=[];for(const t in e)s.push({time:parseFloat(t),value:e[t]});s.sort(n);for(let e=0;e<16;e++)k(s,e,t.elements[e]);return s}function x(e,t){const n=e.keyframes,s=e.name,o=[],r=[],i=[],a=[];for(let e=0,t=n.length;e<t;e++){const t=n[e],s=t.time,c=t.value;ft.fromArray(c).transpose(),ft.decompose(lt,ut,dt),o.push(s),r.push(lt.x,lt.y,lt.z),i.push(ut.x,ut.y,ut.z,ut.w),a.push(dt.x,dt.y,dt.z)}return r.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".position",o,r)),i.length>0&&t.push(new THREE.QuaternionKeyframeTrack(s+".quaternion",o,i)),a.length>0&&t.push(new THREE.VectorKeyframeTrack(s+".scale",o,a)),t}function k(e,t,n){let s,o,r,i=!0;for(o=0,r=e.length;o<r;o++)s=e[o],void 0===s.value[t]?s.value[t]=null:i=!1;if(!0===i)for(o=0,r=e.length;o<r;o++)s=e[o],s.value[t]=n;else w(e,t)}function w(e,t){let n,s;for(let o=0,r=e.length;o<r;o++){const r=e[o];if(null===r.value[t]){if(n=A(e,o,t),s=R(e,o,t),null===n){r.value[t]=s.value[t];continue}if(null===s){r.value[t]=n.value[t];continue}v(r,n,s,t)}}}function A(e,t,n){for(;t>=0;){const s=e[t];if(null!==s.value[n])return s;t--}return null}function R(e,t,n){for(;t<e.length;){const s=e[t];if(null!==s.value[n])return s;t++}return null}function v(e,t,n,s){n.time-t.time!=0?e.value[s]=(e.time-t.time)*(n.value[s]-t.value[s])/(n.time-t.time)+t.value[s]:e.value[s]=t.value[s]}function H(e){const t={name:e.getAttribute("id")||"default",start:parseFloat(e.getAttribute("start")||0),end:parseFloat(e.getAttribute("end")||0),animations:[]};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"instance_animation"===s.nodeName)t.animations.push(i(s.getAttribute("url")))}At.clips[e.getAttribute("id")]=t}function C(e){const t=[],n=e.name,s=e.end-e.start||-1,o=e.animations;for(let e=0,n=o.length;e<n;e++){const n=E(o[e]);for(let e=0,s=n.length;e<s;e++)t.push(n[e])}return new THREE.AnimationClip(n,s,t)}function _(e){return m(At.clips[e],C)}function M(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"skin":t.id=i(s.getAttribute("source")),t.skin=L(s);break;case"morph":t.id=i(s.getAttribute("source")),console.warn("THREE.ColladaLoader: Morph target animation not supported yet.")}}At.controllers[e.getAttribute("id")]=t}function L(e){const t={sources:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"bind_shape_matrix":t.bindShapeMatrix=o(s.textContent);break;case"source":const e=s.getAttribute("id");t.sources[e]=Ee(s);break;case"joints":t.joints=O(s);break;case"vertex_weights":t.vertexWeights=I(s)}}return t}function O(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"input"===s.nodeName){const e=s.getAttribute("semantic"),n=i(s.getAttribute("source"));t.inputs[e]=n}}return t}function I(e){const t={inputs:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=s.getAttribute("semantic"),n=i(s.getAttribute("source")),o=parseInt(s.getAttribute("offset"));t.inputs[e]={id:n,offset:o};break;case"vcount":t.vcount=r(s.textContent);break;case"v":t.v=r(s.textContent)}}return t}function j(e){const t={id:e.id},n=At.geometries[t.id];return void 0!==e.skin&&(t.skin=q(e.skin),n.sources.skinIndices=t.skin.indices,n.sources.skinWeights=t.skin.weights),t}function q(e){function t(e,t){return t.weight-e.weight}const n=4,s={joints:[],indices:{array:[],stride:n},weights:{array:[],stride:n}},o=e.sources,r=e.vertexWeights,i=r.vcount,a=r.v,c=r.inputs.JOINT.offset,l=r.inputs.WEIGHT.offset,d=e.sources[e.joints.inputs.JOINT],u=e.sources[e.joints.inputs.INV_BIND_MATRIX],f=o[r.inputs.WEIGHT.id].array;let h,m,p,g=0;for(h=0,p=i.length;h<p;h++){const e=i[h],o=[];for(m=0;m<e;m++){const e=a[g+c],t=f[a[g+l]];o.push({index:e,weight:t}),g+=2}for(o.sort(t),m=0;m<n;m++){const e=o[m];void 0!==e?(s.indices.array.push(e.index),s.weights.array.push(e.weight)):(s.indices.array.push(0),s.weights.array.push(0))}}for(e.bindShapeMatrix?s.bindMatrix=(new THREE.Matrix4).fromArray(e.bindShapeMatrix).transpose():s.bindMatrix=(new THREE.Matrix4).identity(),h=0,p=d.array.length;h<p;h++){const e=d.array[h],t=(new THREE.Matrix4).fromArray(u.array,h*u.stride).transpose();s.joints.push({name:e,boneInverse:t})}return s}function S(e){return m(At.controllers[e],j)}function U(e){const t={init_from:n(e,"init_from")[0].textContent};At.images[e.getAttribute("id")]=t}function F(e){return void 0!==e.build?e.build:e.init_from}function B(e){const t=At.images[e];return void 0!==t?m(t,F):(console.warn("THREE.ColladaLoader: Couldn't find image with ID:",e),null)}function V(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"profile_COMMON"===s.nodeName)t.profile=P(s)}At.effects[e.getAttribute("id")]=t}function P(e){const t={surfaces:{},samplers:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"newparam":D(s,t);break;case"technique":t.technique=G(s);break;case"extra":t.extra=Y(s)}}return t}function D(e,t){const n=e.getAttribute("sid");for(let s=0,o=e.childNodes.length;s<o;s++){const o=e.childNodes[s];if(1===o.nodeType)switch(o.nodeName){case"surface":t.surfaces[n]=W(o);break;case"sampler2D":t.samplers[n]=z(o)}}}function W(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"init_from"===s.nodeName)t.init_from=s.textContent}return t}function z(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"source"===s.nodeName)t.source=s.textContent}return t}function G(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"constant":case"lambert":case"blinn":case"phong":t.type=s.nodeName,t.parameters=J(s);break;case"extra":t.extra=Y(s)}}return t}function J(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"emission":case"diffuse":case"specular":case"bump":case"ambient":case"shininess":case"transparency":t[s.nodeName]=X(s);break;case"transparent":t[s.nodeName]={opaque:s.hasAttribute("opaque")?s.getAttribute("opaque"):"A_ONE",data:X(s)}}}return t}function X(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":t[s.nodeName]=o(s.textContent);break;case"float":t[s.nodeName]=parseFloat(s.textContent);break;case"texture":t[s.nodeName]={id:s.getAttribute("texture"),extra:K(s)}}}return t}function K(e){const t={technique:{}};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"extra"===s.nodeName)Z(s,t)}return t}function Z(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"technique"===s.nodeName)Q(s,t)}}function Q(e,t){for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"repeatU":case"repeatV":case"offsetU":case"offsetV":t.technique[s.nodeName]=parseFloat(s.textContent);break;case"wrapU":case"wrapV":"TRUE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=1:"FALSE"===s.textContent.toUpperCase()?t.technique[s.nodeName]=0:t.technique[s.nodeName]=parseInt(s.textContent);break;case"bump":t[s.nodeName]=ee(s)}}}function Y(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"technique"===s.nodeName)t.technique=$(s)}return t}function $(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"double_sided":t[s.nodeName]=parseInt(s.textContent);break;case"bump":t[s.nodeName]=ee(s)}}return t}function ee(e){for(var t={},n=0,s=e.childNodes.length;n<s;n++){var o=e.childNodes[n];if(1===o.nodeType&&"texture"===o.nodeName)t[o.nodeName]={id:o.getAttribute("texture"),texcoord:o.getAttribute("texcoord"),extra:K(o)}}return t}function te(e){return e}function ne(e){return m(At.effects[e],te)}function se(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"instance_effect"===s.nodeName)t.url=i(s.getAttribute("url"))}At.materials[e.getAttribute("id")]=t}function oe(e){let t,n=e.slice(2+(e.lastIndexOf(".")-1>>>0));if(n=n.toLowerCase(),"tga"===n)t=Tt;else t=Nt;return t}function re(e){function t(e){const t=n.profile.samplers[e.id];let s=null;if(void 0!==t){s=B(n.profile.surfaces[t.source].init_from)}else console.warn("THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530)."),s=B(e.id);if(null!==s){const t=oe(s);if(void 0!==t){const n=t.load(s),o=e.extra;if(void 0!==o&&void 0!==o.technique&&!1===c(o.technique)){const e=o.technique;n.wrapS=e.wrapU?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.wrapT=e.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,n.offset.set(e.offsetU||0,e.offsetV||0),n.repeat.set(e.repeatU||1,e.repeatV||1)}else n.wrapS=THREE.RepeatWrapping,n.wrapT=THREE.RepeatWrapping;return n}return console.warn("THREE.ColladaLoader: THREE.Loader for texture %s not found.",s),null}return console.warn("THREE.ColladaLoader: Couldn't create texture with ID:",e.id),null}const n=ne(e.url),s=n.profile.technique;let o;switch(s.type){case"phong":case"blinn":o=new THREE.MeshPhongMaterial;break;case"lambert":o=new THREE.MeshLambertMaterial;break;default:o=new THREE.MeshBasicMaterial}o.name=e.name||"";const r=s.parameters;for(const e in r){const n=r[e];switch(e){case"diffuse":n.color&&o.color.fromArray(n.color),n.texture&&(o.map=t(n.texture));break;case"specular":n.color&&o.specular&&o.specular.fromArray(n.color),n.texture&&(o.specularMap=t(n.texture));break;case"bump":n.texture&&(o.normalMap=t(n.texture));break;case"ambient":n.texture&&(o.lightMap=t(n.texture));break;case"shininess":n.float&&o.shininess&&(o.shininess=n.float);break;case"emission":n.color&&o.emissive&&o.emissive.fromArray(n.color),n.texture&&(o.emissiveMap=t(n.texture))}}let i=r.transparent,a=r.transparency;if(void 0===a&&i&&(a={float:1}),void 0===i&&a&&(i={opaque:"A_ONE",data:{color:[1,1,1,1]}}),i&&a)if(i.data.texture)o.transparent=!0;else{const e=i.data.color;switch(i.opaque){case"A_ONE":o.opacity=e[3]*a.float;break;case"RGB_ZERO":o.opacity=1-e[0]*a.float;break;case"A_ZERO":o.opacity=1-e[3]*a.float;break;case"RGB_ONE":o.opacity=e[0]*a.float;break;default:console.warn('THREE.ColladaLoader: Invalid opaque type "%s" of transparent tag.',i.opaque)}o.opacity<1&&(o.transparent=!0)}if(void 0!==s.extra&&void 0!==s.extra.technique){const e=s.extra.technique;for(const n in e){const s=e[n];switch(n){case"double_sided":o.side=1===s?THREE.DoubleSide:THREE.FrontSide;break;case"bump":o.normalMap=t(s.texture),o.normalScale=new THREE.Vector2(1,1)}}}return o}function ie(e){return m(At.materials[e],re)}function ae(e){const t={name:e.getAttribute("name")};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"optics"===s.nodeName)t.optics=ce(s)}At.cameras[e.getAttribute("id")]=t}function ce(e){for(let t=0;t<e.childNodes.length;t++){const n=e.childNodes[t];if("technique_common"===n.nodeName)return le(n)}return{}}function le(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"perspective":case"orthographic":t.technique=s.nodeName,t.parameters=de(s)}}return t}function de(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"xfov":case"yfov":case"xmag":case"ymag":case"znear":case"zfar":case"aspect_ratio":t[s.nodeName]=parseFloat(s.textContent)}}return t}function ue(e){let t;switch(e.optics.technique){case"perspective":t=new THREE.PerspectiveCamera(e.optics.parameters.yfov,e.optics.parameters.aspect_ratio,e.optics.parameters.znear,e.optics.parameters.zfar);break;case"orthographic":let n=e.optics.parameters.ymag,s=e.optics.parameters.xmag;const o=e.optics.parameters.aspect_ratio;s=void 0===s?n*o:s,n=void 0===n?s/o:n,s*=.5,n*=.5,t=new THREE.OrthographicCamera(-s,s,n,-n,e.optics.parameters.znear,e.optics.parameters.zfar);break;default:t=new THREE.PerspectiveCamera}return t.name=e.name||"",t}function fe(e){const t=At.cameras[e];return void 0!==t?m(t,ue):(console.warn("THREE.ColladaLoader: Couldn't find camera with ID:",e),null)}function he(e){let t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType&&"technique_common"===s.nodeName)t=me(s)}At.lights[e.getAttribute("id")]=t}function me(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"directional":case"point":case"spot":case"ambient":t.technique=s.nodeName,t.parameters=pe(s)}}return t}function pe(e){const t={};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"color":const e=o(s.textContent);t.color=(new THREE.Color).fromArray(e);break;case"falloff_angle":t.falloffAngle=parseFloat(s.textContent);break;case"quadratic_attenuation":const n=parseFloat(s.textContent);t.distance=n?Math.sqrt(1/n):0}}return t}function ge(e){let t;switch(e.technique){case"directional":t=new THREE.DirectionalLight;break;case"point":t=new THREE.PointLight;break;case"spot":t=new THREE.SpotLight;break;case"ambient":t=new THREE.AmbientLight}return e.parameters.color&&t.color.copy(e.parameters.color),e.parameters.distance&&(t.distance=e.parameters.distance),t}function be(e){const t=At.lights[e];return void 0!==t?m(t,ge):(console.warn("THREE.ColladaLoader: Couldn't find light with ID:",e),null)}function ye(e){const t={name:e.getAttribute("name"),sources:{},vertices:{},primitives:[]},s=n(e,"mesh")[0];if(void 0!==s){for(let e=0;e<s.childNodes.length;e++){const n=s.childNodes[e];if(1!==n.nodeType)continue;const o=n.getAttribute("id");switch(n.nodeName){case"source":t.sources[o]=Ee(n);break;case"vertices":t.vertices=Ne(n);break;case"polygons":console.warn("THREE.ColladaLoader: Unsupported primitive type: ",n.nodeName);break;case"lines":case"linestrips":case"polylist":case"triangles":t.primitives.push(Te(n));break;default:console.log(n)}}At.geometries[e.getAttribute("id")]=t}}function Ee(e){const t={array:[],stride:3};for(let r=0;r<e.childNodes.length;r++){const i=e.childNodes[r];if(1===i.nodeType)switch(i.nodeName){case"float_array":t.array=o(i.textContent);break;case"Name_array":t.array=s(i.textContent);break;case"technique_common":const e=n(i,"accessor")[0];void 0!==e&&(t.stride=parseInt(e.getAttribute("stride")))}}return t}function Ne(e){const t={};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];1===s.nodeType&&(t[s.getAttribute("semantic")]=i(s.getAttribute("source")))}return t}function Te(e){const t={type:e.nodeName,material:e.getAttribute("material"),count:parseInt(e.getAttribute("count")),inputs:{},stride:0,hasUV:!1};for(let n=0,s=e.childNodes.length;n<s;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"input":const e=i(s.getAttribute("source")),n=s.getAttribute("semantic"),o=parseInt(s.getAttribute("offset")),a=parseInt(s.getAttribute("set")),c=a>0?n+a:n;t.inputs[c]={id:e,offset:o},t.stride=Math.max(t.stride,o+1),"TEXCOORD"===n&&(t.hasUV=!0);break;case"vcount":t.vcount=r(s.textContent);break;case"p":t.p=r(s.textContent)}}return t}function xe(e){const t={};for(let n=0;n<e.length;n++){const s=e[n];void 0===t[s.type]&&(t[s.type]=[]),t[s.type].push(s)}return t}function ke(e){let t=0;for(let n=0,s=e.length;n<s;n++){!0===e[n].hasUV&&t++}t>0&&t<e.length&&(e.uvsNeedsFix=!0)}function we(e){const t={},n=e.sources,s=e.vertices,o=e.primitives;if(0===o.length)return{};const r=xe(o);for(const e in r){const o=r[e];ke(o),t[e]=Ae(o,n,s)}return t}function Ae(e,t,n){const s={},o={array:[],stride:0},r={array:[],stride:0},i={array:[],stride:0},a={array:[],stride:0},c={array:[],stride:0},l={array:[],stride:4},d={array:[],stride:4},u=new THREE.BufferGeometry,f=[];let h=0;for(let s=0;s<e.length;s++){const m=e[s],p=m.inputs;let g=0;switch(m.type){case"lines":case"linestrips":g=2*m.count;break;case"triangles":g=3*m.count;break;case"polylist":for(let e=0;e<m.count;e++){const t=m.vcount[e];switch(t){case 3:g+=3;break;case 4:g+=6;break;default:g+=3*(t-2)}}break;default:console.warn("THREE.ColladaLoader: Unknow primitive type:",m.type)}u.addGroup(h,g,s),h+=g,m.material&&f.push(m.material);for(const s in p){const u=p[s];switch(s){case"VERTEX":for(const s in n){const f=n[s];switch(s){case"POSITION":const n=o.array.length;if(Re(m,t[f],u.offset,o.array),o.stride=t[f].stride,t.skinWeights&&t.skinIndices&&(Re(m,t.skinIndices,u.offset,l.array),Re(m,t.skinWeights,u.offset,d.array)),!1===m.hasUV&&!0===e.uvsNeedsFix){const e=(o.array.length-n)/o.stride;for(let t=0;t<e;t++)i.array.push(0,0)}break;case"NORMAL":Re(m,t[f],u.offset,r.array),r.stride=t[f].stride;break;case"COLOR":Re(m,t[f],u.offset,c.array),c.stride=t[f].stride;break;case"TEXCOORD":Re(m,t[f],u.offset,i.array),i.stride=t[f].stride;break;case"TEXCOORD1":Re(m,t[f],u.offset,a.array),i.stride=t[f].stride;break;default:console.warn('THREE.ColladaLoader: Semantic "%s" not handled in geometry build process.',s)}}break;case"NORMAL":Re(m,t[u.id],u.offset,r.array),r.stride=t[u.id].stride;break;case"COLOR":Re(m,t[u.id],u.offset,c.array),c.stride=t[u.id].stride;break;case"TEXCOORD":Re(m,t[u.id],u.offset,i.array),i.stride=t[u.id].stride;break;case"TEXCOORD1":Re(m,t[u.id],u.offset,a.array),a.stride=t[u.id].stride}}}return o.array.length>0&&u.setAttribute("position",new THREE.Float32BufferAttribute(o.array,o.stride)),r.array.length>0&&u.setAttribute("normal",new THREE.Float32BufferAttribute(r.array,r.stride)),c.array.length>0&&u.setAttribute("color",new THREE.Float32BufferAttribute(c.array,c.stride)),i.array.length>0&&u.setAttribute("uv",new THREE.Float32BufferAttribute(i.array,i.stride)),a.array.length>0&&u.setAttribute("uv2",new THREE.Float32BufferAttribute(a.array,a.stride)),l.array.length>0&&u.setAttribute("skinIndex",new THREE.Float32BufferAttribute(l.array,l.stride)),d.array.length>0&&u.setAttribute("skinWeight",new THREE.Float32BufferAttribute(d.array,d.stride)),s.data=u,s.type=e[0].type,s.materialKeys=f,s}function Re(e,t,n,s){function o(e){let t=r[e+n]*l;const o=t+l;for(;t<o;t++)s.push(c[t])}const r=e.p,i=e.stride,a=e.vcount,c=t.array,l=t.stride;if(void 0!==e.vcount){let e=0;for(let t=0,n=a.length;t<n;t++){const n=a[t];if(4===n){const t=e+1*i,n=e+2*i,s=e+3*i;o(e+0*i),o(t),o(s),o(t),o(n),o(s)}else if(3===n){const t=e+1*i,n=e+2*i;o(e+0*i),o(t),o(n)}else if(n>4)for(let t=1,s=n-2;t<=s;t++){const n=e+i*t,s=e+i*(t+1);o(e+0*i),o(n),o(s)}e+=i*n}}else for(let e=0,t=r.length;e<t;e+=i)o(e)}function ve(e){return m(At.geometries[e],we)}function He(e){const t={name:e.getAttribute("name")||"",joints:{},links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType&&"technique_common"===s.nodeName)Me(s,t)}At.kinematicsModels[e.getAttribute("id")]=t}function Ce(e){return void 0!==e.build?e.build:e}function _e(e){return m(At.kinematicsModels[e],Ce)}function Me(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"joint":t.joints[s.getAttribute("sid")]=Le(s);break;case"link":t.links.push(Ie(s))}}}function Le(e){let t;for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"prismatic":case"revolute":t=Oe(s)}}return t}function Oe(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",axis:new THREE.Vector3,limits:{min:0,max:0},type:e.nodeName,static:!1,zeroPosition:0,middlePosition:0};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"axis":const e=o(s.textContent);t.axis.fromArray(e);break;case"limits":const n=s.getElementsByTagName("max")[0],r=s.getElementsByTagName("min")[0];t.limits.max=parseFloat(n.textContent),t.limits.min=parseFloat(r.textContent)}}return t.limits.min>=t.limits.max&&(t.static=!0),t.middlePosition=(t.limits.min+t.limits.max)/2,t}function Ie(e){const t={sid:e.getAttribute("sid"),name:e.getAttribute("name")||"",attachments:[],transforms:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"attachment_full":t.attachments.push(je(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(qe(s))}}return t}function je(e){const t={joint:e.getAttribute("joint").split("/").pop(),transforms:[],links:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"link":t.links.push(Ie(s));break;case"matrix":case"translate":case"rotate":t.transforms.push(qe(s))}}return t}function qe(e){const t={type:e.nodeName},n=o(e.textContent);switch(t.type){case"matrix":t.obj=new THREE.Matrix4,t.obj.fromArray(n).transpose();break;case"translate":t.obj=new THREE.Vector3,t.obj.fromArray(n);break;case"rotate":t.obj=new THREE.Vector3,t.obj.fromArray(n),t.angle=THREE.MathUtils.degToRad(n[3])}return t}function Se(e){const t={name:e.getAttribute("name")||"",rigidBodies:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType&&"rigid_body"===s.nodeName)t.rigidBodies[s.getAttribute("name")]={},Ue(s,t.rigidBodies[s.getAttribute("name")])}At.physicsModels[e.getAttribute("id")]=t}function Ue(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType&&"technique_common"===s.nodeName)Fe(s,t)}}function Fe(e,t){for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType)switch(s.nodeName){case"inertia":t.inertia=o(s.textContent);break;case"mass":t.mass=o(s.textContent)[0]}}}function Be(e){const t={bindJointAxis:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType&&"bind_joint_axis"===s.nodeName)t.bindJointAxis.push(Ve(s))}At.kinematicsScenes[i(e.getAttribute("url"))]=t}function Ve(e){const t={target:e.getAttribute("target").split("/").pop()};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1===s.nodeType&&"axis"===s.nodeName){const e=s.getElementsByTagName("param")[0];t.axis=e.textContent;const n=t.axis.split("inst_").pop().split("axis")[0];t.jointIndex=n.substr(0,n.length-1)}}return t}function Pe(e){return void 0!==e.build?e.build:e}function De(e){return m(At.kinematicsScenes[e],Pe)}function We(){function e(e,t){const n=t.getAttribute("name"),s=o.joints[e];i.traverse((function(o){o.name===n&&(c[e]={object:o,transforms:ze(t),joint:s,position:s.zeroPosition})}))}const t=Object.keys(At.kinematicsModels)[0],n=Object.keys(At.kinematicsScenes)[0],s=Object.keys(At.visualScenes)[0];if(void 0===t||void 0===n)return;const o=_e(t),r=De(n),i=rt(s),a=r.bindJointAxis,c={};for(let t=0,n=a.length;t<n;t++){const n=a[t],s=gt.querySelector('[sid="'+n.target+'"]');if(s){const t=s.parentElement;e(n.jointIndex,t)}}const l=new THREE.Matrix4;kt={joints:o&&o.joints,getJointValue:function(e){const t=c[e];if(t)return t.position;console.warn("THREE.ColladaLoader: Joint "+e+" doesn't exist.")},setJointValue:function(e,t){const n=c[e];if(n){const s=n.joint;if(t>s.limits.max||t<s.limits.min)console.warn("THREE.ColladaLoader: Joint "+e+" value "+t+" outside of limits (min: "+s.limits.min+", max: "+s.limits.max+").");else if(s.static)console.warn("THREE.ColladaLoader: Joint "+e+" is static.");else{const o=n.object,r=s.axis,i=n.transforms;ft.identity();for(let n=0;n<i.length;n++){const o=i[n];if(o.sid&&-1!==o.sid.indexOf(e))switch(s.type){case"revolute":ft.multiply(l.makeRotationAxis(r,THREE.MathUtils.degToRad(t)));break;case"prismatic":ft.multiply(l.makeTranslation(r.x*t,r.y*t,r.z*t));break;default:console.warn("THREE.ColladaLoader: Unknown joint type: "+s.type)}else switch(o.type){case"matrix":ft.multiply(o.obj);break;case"translate":ft.multiply(l.makeTranslation(o.obj.x,o.obj.y,o.obj.z));break;case"scale":ft.scale(o.obj);break;case"rotate":ft.multiply(l.makeRotationAxis(o.obj,o.angle))}}o.matrix.copy(ft),o.matrix.decompose(o.position,o.quaternion,o.scale),c[e].position=t}}else console.log("THREE.ColladaLoader: "+e+" does not exist.")}}}function ze(e){const t=[],n=gt.querySelector('[id="'+e.id+'"]');for(let e=0;e<n.childNodes.length;e++){const s=n.childNodes[e];if(1!==s.nodeType)continue;let r,i;switch(s.nodeName){case"matrix":r=o(s.textContent);const e=(new THREE.Matrix4).fromArray(r).transpose();t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:e});break;case"translate":case"scale":r=o(s.textContent),i=(new THREE.Vector3).fromArray(r),t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:i});break;case"rotate":r=o(s.textContent),i=(new THREE.Vector3).fromArray(r);const n=THREE.MathUtils.degToRad(r[3]);t.push({sid:s.getAttribute("sid"),type:s.nodeName,obj:i,angle:n})}}return t}function Ge(e){const t=e.getElementsByTagName("node");for(let e=0;e<t.length;e++){const n=t[e];!1===n.hasAttribute("id")&&n.setAttribute("id",a())}}function Je(e){const t={name:e.getAttribute("name")||"",type:e.getAttribute("type"),id:e.getAttribute("id"),sid:e.getAttribute("sid"),matrix:new THREE.Matrix4,nodes:[],instanceCameras:[],instanceControllers:[],instanceLights:[],instanceGeometries:[],instanceNodes:[],transforms:{}};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];if(1!==s.nodeType)continue;let r;switch(s.nodeName){case"node":t.nodes.push(s.getAttribute("id")),Je(s);break;case"instance_camera":t.instanceCameras.push(i(s.getAttribute("url")));break;case"instance_controller":t.instanceControllers.push(Xe(s));break;case"instance_light":t.instanceLights.push(i(s.getAttribute("url")));break;case"instance_geometry":t.instanceGeometries.push(Xe(s));break;case"instance_node":t.instanceNodes.push(i(s.getAttribute("url")));break;case"matrix":r=o(s.textContent),t.matrix.multiply(ft.fromArray(r).transpose()),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"translate":r=o(s.textContent),ht.fromArray(r),t.matrix.multiply(ft.makeTranslation(ht.x,ht.y,ht.z)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"rotate":r=o(s.textContent);const e=THREE.MathUtils.degToRad(r[3]);t.matrix.multiply(ft.makeRotationAxis(ht.fromArray(r),e)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"scale":r=o(s.textContent),t.matrix.scale(ht.fromArray(r)),t.transforms[s.getAttribute("sid")]=s.nodeName;break;case"extra":break;default:console.log(s)}}return et(t.id)?console.warn("THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.",t.id):At.nodes[t.id]=t,t}function Xe(e){const t={id:i(e.getAttribute("url")),materials:{},skeletons:[]};for(let n=0;n<e.childNodes.length;n++){const s=e.childNodes[n];switch(s.nodeName){case"bind_material":const e=s.getElementsByTagName("instance_material");for(let n=0;n<e.length;n++){const s=e[n],o=s.getAttribute("symbol"),r=s.getAttribute("target");t.materials[o]=i(r)}break;case"skeleton":t.skeletons.push(i(s.textContent))}}return t}function Ke(e,t){const n=[],s=[];let o,r,i;for(o=0;o<e.length;o++){const s=e[o];let r;if(et(s))r=tt(s),Ze(r,t,n);else if(ot(s)){const e=At.visualScenes[s].children;for(let s=0;s<e.length;s++){const o=e[s];if("JOINT"===o.type){Ze(tt(o.id),t,n)}}}else console.error("THREE.ColladaLoader: Unable to find root bone of skeleton with ID:",s)}for(o=0;o<t.length;o++)for(r=0;r<n.length;r++)if(i=n[r],i.bone.name===t[o].name){s[o]=i,i.processed=!0;break}for(o=0;o<n.length;o++)i=n[o],!1===i.processed&&(s.push(i),i.processed=!0);const a=[],c=[];for(o=0;o<s.length;o++)i=s[o],a.push(i.bone),c.push(i.boneInverse);return new THREE.Skeleton(a,c)}function Ze(e,t,n){e.traverse((function(e){if(!0===e.isBone){let s;for(let n=0;n<t.length;n++){const o=t[n];if(o.name===e.name){s=o.boneInverse;break}}void 0===s&&(s=new THREE.Matrix4),n.push({bone:e,boneInverse:s,processed:!1})}}))}function Qe(e){const t=[],n=e.matrix,s=e.nodes,o=e.type,r=e.instanceCameras,i=e.instanceControllers,a=e.instanceLights,c=e.instanceGeometries,l=e.instanceNodes;for(let e=0,n=s.length;e<n;e++)t.push(tt(s[e]));for(let e=0,n=r.length;e<n;e++){const n=fe(r[e]);null!==n&&t.push(n.clone())}for(let e=0,n=i.length;e<n;e++){const n=i[e],s=S(n.id),o=$e(ve(s.id),n.materials),r=Ke(n.skeletons,s.skin.joints);for(let e=0,n=o.length;e<n;e++){const n=o[e];n.isSkinnedMesh&&(n.bind(r,s.skin.bindMatrix),n.normalizeSkinWeights()),t.push(n)}}for(let e=0,n=a.length;e<n;e++){const n=be(a[e]);null!==n&&t.push(n.clone())}for(let e=0,n=c.length;e<n;e++){const n=c[e],s=$e(ve(n.id),n.materials);for(let e=0,n=s.length;e<n;e++)t.push(s[e])}for(let e=0,n=l.length;e<n;e++)t.push(tt(l[e]).clone());let d;if(0===s.length&&1===t.length)d=t[0];else{d="JOINT"===o?new THREE.Bone:new THREE.Group;for(let e=0;e<t.length;e++)d.add(t[e])}return d.name="JOINT"===o?e.sid:e.name,d.matrix.copy(n),d.matrix.decompose(d.position,d.quaternion,d.scale),d}function Ye(e,t){const n=[];for(let s=0,o=e.length;s<o;s++){const o=t[e[s]];void 0===o?(console.warn("THREE.ColladaLoader: Material with key %s not found. Apply fallback material.",e[s]),n.push(mt)):n.push(ie(o))}return n}function $e(e,t){const n=[];for(const s in e){const o=e[s],r=Ye(o.materialKeys,t);0===r.length&&("lines"===s||"linestrips"===s?r.push(new THREE.LineBasicMaterial):r.push(new THREE.MeshPhongMaterial))
;const i=void 0!==o.data.attributes.skinIndex,a=1===r.length?r[0]:r;let c;switch(s){case"lines":c=new THREE.LineSegments(o.data,a);break;case"linestrips":c=new THREE.Line(o.data,a);break;case"triangles":case"polylist":c=i?new THREE.SkinnedMesh(o.data,a):new THREE.Mesh(o.data,a)}n.push(c)}return n}function et(e){return void 0!==At.nodes[e]}function tt(e){return m(At.nodes[e],Qe)}function nt(e){const t={name:e.getAttribute("name"),children:[]};Ge(e);const s=n(e,"node");for(let e=0;e<s.length;e++)t.children.push(Je(s[e]));At.visualScenes[e.getAttribute("id")]=t}function st(e){const t=new THREE.Group;t.name=e.name;const n=e.children;for(let e=0;e<n.length;e++){const s=n[e];t.add(tt(s.id))}return t}function ot(e){return void 0!==At.visualScenes[e]}function rt(e){return m(At.visualScenes[e],st)}function it(e){return rt(i(n(e,"instance_visual_scene")[0].getAttribute("url")))}function at(){const e=At.clips;if(!0===c(e)){if(!1===c(At.animations)){const e=[];for(const t in At.animations){const n=E(t);for(let t=0,s=n.length;t<s;t++)e.push(n[t])}xt.push(new THREE.AnimationClip("default",-1,e))}}else for(const t in e)xt.push(_(t))}function ct(e){let t="";const n=[e];for(;n.length;){const e=n.shift();e.nodeType===Node.TEXT_NODE?t+=e.textContent:(t+="\n",n.push.apply(n,e.childNodes))}return t.trim()}const lt=new THREE.Vector3,dt=new THREE.Vector3,ut=new THREE.Quaternion,ft=new THREE.Matrix4,ht=new THREE.Vector3,mt=new THREE.MeshBasicMaterial({color:16711935});if(0===e.length)return{scene:new THREE.Scene};const pt=(new DOMParser).parseFromString(e,"application/xml"),gt=n(pt,"COLLADA")[0],bt=pt.getElementsByTagName("parsererror")[0];if(void 0!==bt){const e=n(bt,"div")[0];let t;return t=e?e.textContent:ct(bt),console.error("THREE.ColladaLoader: Failed to parse collada file.\n",t),null}const yt=gt.getAttribute("version");console.log("THREE.ColladaLoader: File version",yt);const Et=l(n(gt,"asset")[0]),Nt=new THREE.TextureLoader(this.manager);let Tt;Nt.setPath(this.resourcePath||t).setCrossOrigin(this.crossOrigin),THREE.TGALoader&&(Tt=new THREE.TGALoader(this.manager),Tt.setPath(this.resourcePath||t));const xt=[];let kt={},wt=0;const At={animations:{},clips:{},controllers:{},images:{},effects:{},materials:{},cameras:{},lights:{},geometries:{},nodes:{},visualScenes:{},kinematicsModels:{},physicsModels:{},kinematicsScenes:{}};f(gt,"library_animations","animation",p),f(gt,"library_animation_clips","animation_clip",H),f(gt,"library_controllers","controller",M),f(gt,"library_images","image",U),f(gt,"library_effects","effect",V),f(gt,"library_materials","material",se),f(gt,"library_cameras","camera",ae),f(gt,"library_lights","light",he),f(gt,"library_geometries","geometry",ye),f(gt,"library_nodes","node",Je),f(gt,"library_visual_scenes","visual_scene",nt),f(gt,"library_kinematics_models","kinematics_model",He),f(gt,"library_physics_models","physics_model",Se),f(gt,"scene","instance_kinematics_scene",Be),h(At.animations,y),h(At.clips,C),h(At.controllers,j),h(At.images,F),h(At.effects,te),h(At.materials,re),h(At.cameras,ue),h(At.lights,ge),h(At.geometries,we),h(At.visualScenes,st),at(),We();const Rt=it(n(gt,"scene")[0]);return Rt.animations=xt,"Z_UP"===Et.upAxis&&Rt.quaternion.setFromEuler(new THREE.Euler(-Math.PI/2,0,0)),Rt.scale.multiplyScalar(Et.unit),{get animations(){return console.warn("THREE.ColladaLoader: Please access animations over scene.animations now."),xt},kinematics:kt,library:At,scene:Rt}}}THREE.ColladaLoader=e}();